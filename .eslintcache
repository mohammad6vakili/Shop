[{"/media/mohammad/New Volume/Programming/VsCode/Practices/React/test/src/index.js":"1","/media/mohammad/New Volume/Programming/VsCode/Practices/React/test/src/App.js":"2","/media/mohammad/New Volume/Programming/VsCode/Practices/React/test/src/components/Cart.jsx":"3","/media/mohammad/New Volume/Programming/VsCode/Practices/React/test/src/components/products.jsx":"4","/media/mohammad/New Volume/Programming/VsCode/Practices/React/test/src/components/Filter.jsx":"5","/media/mohammad/New Volume/Programming/VsCode/Practices/React/test/src/components/Navigation.jsx":"6"},{"size":200,"mtime":1608631814514,"results":"7","hashOfConfig":"8"},{"size":4010,"mtime":1610727638873,"results":"9","hashOfConfig":"8"},{"size":3775,"mtime":1609660604109,"results":"10","hashOfConfig":"8"},{"size":3219,"mtime":1609660604117,"results":"11","hashOfConfig":"8"},{"size":1000,"mtime":1609660604115,"results":"12","hashOfConfig":"8"},{"size":469,"mtime":1610727681558,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1ajh8dp",{"filePath":"17","messages":"18","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/mohammad/New Volume/Programming/VsCode/Practices/React/test/src/index.js",[],["28","29"],"/media/mohammad/New Volume/Programming/VsCode/Practices/React/test/src/App.js",["30","31","32","33","34","35","36","37"],"/media/mohammad/New Volume/Programming/VsCode/Practices/React/test/src/components/Cart.jsx",[],"/media/mohammad/New Volume/Programming/VsCode/Practices/React/test/src/components/products.jsx",["38"],"import React from 'react';\nimport Fade from 'react-reveal/Fade';\nimport Modal from 'react-modal';\nimport Zoom from 'react-reveal/Zoom';\n\n\nconst Product =({products,addToCart,openModal,closeModal,modal})=>{\n\n\n    return(\n            <div>\n            <Fade bottom cascade>\n                <ul className='products '>\n                    {products.map((product)=>(\n                        <li className=' col-4-lg' key={product.id}>\n                            <div className='product'>\n                                <a onClick={()=>openModal(product)}>\n                                    <img src={product.image} alt={product.title}/>\n                                    <p>{product.title}</p>\n                                </a>\n                                <div className=\"product-price pb-2 container-fluid\">\n                                    <div className='container'>${product.price}</div>\n                                    <button onClick={()=>addToCart(product)} className='btn btn-warning btn-sm add-btn'>Add to Card</button>\n                                </div>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            </Fade>\n            {modal && \n                <Modal isOpen={true} onRequestClose={closeModal}>\n                    <Zoom>\n                        <div className='close-button-container'>\n                            <button onClick={closeModal}>X</button>\n                        </div>\n                        <div className='product-details'>\n                            <img src={modal.product.image} alt={modal.product.title}/>\n                            <div className='product-details-description'>\n                                <p>\n                                    <strong>{modal.product.title}</strong>\n                                </p>\n                                <p>\n                                    {modal.product.description}\n                                </p>\n                                <p>\n                                    Available Sizes : {\" \"}\n                                    {modal.product.availableSizes.map((x)=>(\n                                        <span>\n                                            {\"  \"}\n                                            <button className='btn btn-secondary'>{x}</button>\n                                        </span>\n                                    ))}\n                                </p>\n                                <div className='product-price'>\n                                    <div>$ {modal.product.price}</div>\n                                    <button  className='modal-add-button'\n                                    onClick={()=> {\n                                    addToCart(modal.product);\n                                    closeModal();\n                                    }}>\n                                        Add To Cart\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </Zoom>\n                </Modal>\n            }\n        </div>\n    );\n}\nexport default Product;","/media/mohammad/New Volume/Programming/VsCode/Practices/React/test/src/components/Filter.jsx",[],"/media/mohammad/New Volume/Programming/VsCode/Practices/React/test/src/components/Navigation.jsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":21,"column":10,"nodeType":"45","messageId":"46","endLine":21,"endColumn":14},{"ruleId":"43","severity":1,"message":"47","line":21,"column":15,"nodeType":"45","messageId":"46","endLine":21,"endColumn":22},{"ruleId":"43","severity":1,"message":"48","line":22,"column":10,"nodeType":"45","messageId":"46","endLine":22,"endColumn":15},{"ruleId":"43","severity":1,"message":"49","line":22,"column":16,"nodeType":"45","messageId":"46","endLine":22,"endColumn":24},{"ruleId":"43","severity":1,"message":"50","line":23,"column":10,"nodeType":"45","messageId":"46","endLine":23,"endColumn":17},{"ruleId":"43","severity":1,"message":"51","line":23,"column":18,"nodeType":"45","messageId":"46","endLine":23,"endColumn":28},{"ruleId":"52","severity":1,"message":"53","line":43,"column":42,"nodeType":"54","messageId":"55","endLine":43,"endColumn":43},{"ruleId":"52","severity":1,"message":"53","line":45,"column":42,"nodeType":"54","messageId":"55","endLine":45,"endColumn":43},{"ruleId":"56","severity":1,"message":"57","line":17,"column":33,"nodeType":"58","endLine":17,"endColumn":69},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'setName' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'address' is assigned a value but never used.","'setAddress' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]